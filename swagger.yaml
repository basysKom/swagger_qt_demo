swagger: "2.0"
host: "localhost:3000"
basePath: "/"
info:
  description: "This is a sample ERP server to simulate distribution of jobs."
  version: "1.0.0"
  title: "ERP job distribution"
tags:
- name: "order"
  description: "Everything about an order"
schemes:
- "http"
paths:
  /order:
    get:
      tags:
      - "order"
      summary: "list orders"
      description: "w/o any query parameter all orders will be returned. Multiple status can be provided with comma separated string"
      operationId: "listOrders"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "pending"
          - "processing"
          - "processed"
          - "defered"
          default: "pending"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order"
        "400":
          description: "Invalid status value"
  /order/{orderId}:
    get:
      tags:
      - "order"
      summary: "Find order by ID"
      description: "Returns a single pet"
      operationId: "getOrderById"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of order to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
    patch:
      tags:
      - "order"
      summary: "Updates a order status with partial order object"
      description: "Only the status property of an order will be updated"
      operationId: "updateOrderWith"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of order that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "updates"
        in: "body"
        description: "Updated status of the order"
        required: true
        schema:
          title: "partialOrder"
          description: "only the status property is used in this example"
          type: "object"
          properties:
            status:
              type: "string"
              description: "status the order should be tranfered to"
              enum:
              - "processing"
              - "processed"
              - "deferred"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
        "405":
          description: "Invalid input"
        "409":
          description: "Invalid state transition"

definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      wood:
        type: "string"
      quantity:
        type: "integer"
        format: "int32"
      dimensions:
        type: "object"
        properties:
          height:
            type: "number"
            format: "double"
          length:
            type: "number"
            format: "double"
          width:
            type: "number"
            format: "double"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "pending"
        - "processing"
        - "processed"
        - "deferred"
      complete:
        type: "boolean"
        default: false
